name: Deploy handymanbackend

on:
  push:
    # Only run this workflow if it is a commit to master.
    branches:
      - backend-Deploy
    # Only run this workflow if the commit has modified files from frontend
    paths:
      - dr.handyman/**


env:
  IMAGE_NAME: handymanbackend

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    defaults:
      run:
        working-directory: .

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into GitHub Container Registry
        # TODO: Create a Personal Access Tokens (PAT) with `read:packages` and `write:packages` scopes and save it as an Actions secret `CR_PAT`
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "backend-Deploy" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      - name: deploy new image
        uses: appleboy/ssh-action@v0.1.4
        with:
                host: ${{ secrets.HOST }}
                username: ${{ secrets.USERNAME }}
                key: ${{ secrets.KEY }}
                port: ${{ secrets.PORT }}
                passphrase: ${{ secrets.PASSPHRASE }}
                script: |
                        ACTOR=${{ github.actor }}
                        ACTOR=$(echo $ACTOR | tr '[A-Z]' '[a-z]')
                        echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u $ACTOR --password-stdin
                        docker rm $(docker stop $(docker ps -a -q --filter ancestor=ghcr.io/utscc09/handymanbackend --format="{{.ID}}"))
                        docker pull ghcr.io/utscc09/handymanbackend
                        docker run -d -e PORT=3000 -e MONGO='mongodb+srv://Chris:chris@dr-handyman.7i3hz.mongodb.net/myFirstDatabase?retryWrites=true&w=majority' -e REDIS='XnWsIUd2TZ4PFZBApx603S1WGBSCZK9R' -e SECRET='some secret' --rm -p 3000:3000 -v $(pwd)/dr.handyman/files:/usr/src/app/dr.handyman/files ghcr.io/utscc09/handymanbackend
